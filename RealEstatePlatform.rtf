{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red79\green123\blue61;\red26\green26\blue41;\red172\green172\blue193;
\red70\green137\blue204;\red212\green212\blue212;\red167\green197\blue152;\red45\green175\blue118;\red237\green114\blue173;
\red13\green102\blue149;\red194\green126\blue101;\red14\green86\blue166;\red187\green97\blue44;\red253\green181\blue13;
\red140\green108\blue11;\red31\green133\blue64;}
{\*\expandedcolortbl;;\cssrgb\c37647\c54510\c30588;\cssrgb\c13333\c13725\c21176;\cssrgb\c72941\c73333\c80000;
\cssrgb\c33725\c61176\c83922;\cssrgb\c86275\c86275\c86275;\cssrgb\c70980\c80784\c65882;\cssrgb\c19608\c72941\c53725;\cssrgb\c95294\c54118\c73333;
\cssrgb\c0\c47843\c65098;\cssrgb\c80784\c56863\c47059;\cssrgb\c3137\c42353\c70980;\cssrgb\c78824\c45882\c22353;\cssrgb\c100000\c75686\c2745;
\cssrgb\c61961\c49412\c3137;\cssrgb\c12941\c58039\c31765;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
//SPDX-License-Identifier: Unlicense\cf4 \cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 pragma\cf4  \cf5 solidity\cf4  \cf6 ^\cf7 0.8.0\cf6 ;\cf4 \cb1 \
\
\cb3 interface IERC721 \cf6 \{\cf4 \cb1 \
\
\cb3     \cf5 function\cf4  transferPropertyFrom\cf6 (\cf4 \cb1 \
\cb3         \cf5 address\cf4  _from\cf6 ,\cf4 \cb1 \
\cb3         \cf5 address\cf4  _to\cf6 ,\cf4 \cb1 \
\cb3         \cf5 uint256\cf4  _id\cb1 \
\cb3     \cf6 )\cf4  \cf8 external\cf6 ;\cf4 \cb1 \
\
\cb3     \cf5 function\cf4  approve\cf6 (\cf5 address\cf4  _to\cf6 ,\cf4  \cf5 uint256\cf4  _tokenId\cf6 )\cf4  \cf8 external\cf6 ;\cf4 \cb1 \
\
\cf6 \cb3 \}\cf4 \cb1 \
\
\cf5 \cb3 struct\cf4  Buyer \cf6 \{\cf4 \cb1 \
\cb3     \cf5 address\cf4  id\cf6 ;\cf4 \cb1 \
\cb3     \cf5 address\cf4  bank\cf6 ;\cf4 \cb1 \
\cf6 \cb3 \}\cf4 \cb1 \
\
\cf5 \cb3 struct\cf4  Bid \cf6 \{\cf4 \cb1 \
\cb3     \cf5 uint256\cf4  propertyID\cf6 ;\cf4 \cb1 \
\cb3     \cf5 address\cf4  buyerID\cf6 ;\cf4 \cb1 \
\cb3     \cf5 uint256\cf4  amount\cf6 ;\cf4 \cb1 \
\cb3     \cf5 bool\cf4  isBankApproved\cf6 ;\cf4 \cb1 \
\cf6 \cb3 \}\cf4 \cb1 \
\
\cf5 \cb3 struct\cf4  Property \cf6 \{\cf4 \cb1 \
\cb3     \cf5 uint256\cf4  id\cf6 ;\cf4 \cb1 \
\cb3     \cf5 uint256\cf4  price\cf6 ;\cf4 \cb1 \
\cb3     \cf5 address\cf4  inspector\cf6 ;\cf4 \cb1 \
\cb3     \cf5 bool\cf4  isOnSale\cf6 ;\cf4 \cb1 \
\cb3     \cf5 bool\cf4  isInspected\cf6 ;\cf4 \cb1 \
\cf6 \cb3 \}\cf4 \cb1 \
\
\cf5 \cb3 contract\cf4  RealEstatePlatform \cf6 \{\cf4 \cb1 \
\cb3     \cf5 address\cf4  \cf8 public\cf4  nftAddress\cf6 ;\cf4 \cb1 \
\cb3     \cf5 address\cf4  \cf8 payable\cf4  \cf8 public\cf4  seller\cf6 ;\cf4 \cb1 \
\
\cb3     Buyer \cf6 []\cf4  buyers\cf6 ;\cf4 \cb1 \
\cb3     Property \cf6 []\cf4  properties\cf6 ;\cf4 \cb1 \
\cb3     Bid \cf6 []\cf4  bids\cf6 ;\cf4 \cb1 \
\cb3     Bid highestBid\cf6 ;\cf4 \cb1 \
\
\cb3     \cf9 constructor\cf6 (\cf5 address\cf4  _nftAddress\cf6 ,\cf4  \cf5 address\cf4  \cf8 payable\cf4  _seller\cf6 )\cf4  \cf6 \{\cf4 \cb1 \
\cb3         nftAddress \cf6 =\cf4  _nftAddress\cf6 ;\cf4 \cb1 \
\cb3         seller \cf6 =\cf4  _seller\cf6 ;\cf4 \cb1 \
\cb3     \cf6 \}\cf4 \cb1 \
\
\cb3     \cf2 // Put property on sale\cf4 \cb1 \
\cb3     \cf5 function\cf4  putOnSale\cf6 (\cf4  \cf5 uint256\cf4  _propertyID\cf6 ,\cf4  \cf5 uint256\cf4  _purchasePrice\cf6 ,\cf4  \cf5 address\cf4  _inspector\cf6 )\cf4  \cf8 public\cf4  \cf8 payable\cf4  \cf6 \{\cf4 \cb1 \
\cb3         \cf10 require\cf6 (\cf10 msg\cf6 .\cf4 sender \cf6 ==\cf4  seller\cf6 ,\cf4  \cf11 "Only seller can call this method"\cf6 );\cf4 \cb1 \
\
\cb3         \cf2 // trransfer NFT to this contract \cf4 \cb1 \
\cb3         IERC721\cf6 (\cf4 nftAddress\cf6 ).\cf4 transferPropertyFrom\cf6 (\cf10 msg\cf6 .\cf4 sender\cf6 ,\cf4  \cf5 address\cf6 (\cf12 \cb3 this\cf6 \cb3 ),\cf4  _propertyID\cf6 );\cf4 \cb1 \
\
\cb3         properties\cf6 .\cf4 push\cf6 (\cf4  \cb1 \
\cb3             Property\cf6 (\{\cf4 id\cf6 :\cf4  _propertyID\cf6 ,\cf4  price\cf6 :\cf4  _purchasePrice\cf6 ,\cf4  inspector\cf6 :\cf4  _inspector\cf6 ,\cf4  isOnSale\cf6 :\cf4  \cf5 true\cf6 ,\cf4  isInspected\cf6 :\cf4  \cf5 false\cf6 \})\cf4 \cb1 \
\cb3         \cf6 );\cf4 \cb1 \
\cb3     \cf6 \}\cf4 \cb1 \
\
\cb3     \cf2 // register buyer in the list for biding\cf4 \cb1 \
\cb3     \cf5 function\cf4  register\cf6 (\cf5 address\cf4  _buyer\cf6 ,\cf4  \cf5 address\cf4  _bank\cf6 )\cf4  \cf8 public\cf4  \cf6 \{\cf4 \cb1 \
\cb3         \cf10 require\cf6 (\cf10 msg\cf6 .\cf4 sender \cf6 ==\cf4  seller\cf6 ,\cf4  \cf11 "Only seller can register the buyer"\cf6 );\cf4 \cb1 \
\
\cb3         buyers\cf6 .\cf4 push\cf6 (\cf4  \cb1 \
\cb3             Buyer\cf6 (\{\cf4 id\cf6 :\cf4  _buyer\cf6 ,\cf4  bank\cf6 :\cf4  _bank\cf6 \})\cf4 \cb1 \
\cb3         \cf6 )\cf4  \cf6 ;\cf4 \cb1 \
\cb3     \cf6 \}\cf4 \cb1 \
\
\cb3     \cf5 function\cf4  bid\cf6 (\cf5 uint256\cf4  _propertyID\cf6 ,\cf4  \cf5 uint256\cf4  _bidAmount\cf6 )\cf4  \cf8 public\cf4  \cf6 \{\cf4 \cb1 \
\cb3         \cf10 require\cf6 (\cf4 isContainsBuyer\cf6 (\cf10 msg\cf6 .\cf4 sender\cf6 ),\cf4  \cf11 "Only valid buyer can bid"\cf6 );\cf4 \cb1 \
\cb3         \cf10 require\cf6 (\cf4 isContainsProperty\cf6 (\cf4 _propertyID\cf6 ),\cf4  \cf11 "Invalid Property. It is not on sale"\cf6 );\cf4 \cb1 \
\
\cb3          bids\cf6 .\cf4 push\cf6 (\cf4  \cb1 \
\cb3             Bid\cf6 (\{\cf4 propertyID\cf6 :\cf4  _propertyID\cf6 ,\cf4  buyerID\cf6 :\cf4  \cf10 msg\cf6 .\cf4 sender\cf6 ,\cf4  amount\cf6 :\cf4  _bidAmount\cf6 ,\cf4  isBankApproved\cf6 :\cf4  \cf5 false\cf6 \})\cf4 \cb1 \
\cb3         \cf6 );\cf4 \cb1 \
\cb3     \cf6 \}\cf4 \cb1 \
\
\cb3     \cf2 // Update Inspection Status (only inspector)\cf4 \cb1 \
\cb3     \cf5 function\cf4  inspectionFor\cf6 (\cf5 uint256\cf4  _propertyID\cf6 ,\cf4  \cf5 bool\cf4  _passed\cf6 )\cf4  \cf8 public\cf4  \cf6 \{\cf4 \cb1 \
\cb3         \cb1 \
\cb3         \cf13 for\cf6 (\cf5 uint\cf4  i \cf6 =\cf4  \cf7 0\cf6 ;\cf4  i\cf6 <\cf4 properties\cf6 .\cf4 length\cf6 ;\cf4  i\cf6 ++)\cf4  \cf6 \{\cf4 \cb1 \
\cb3             \cf14 \cb3 if\cf6 \cb3 (\cf4 properties\cf6 [\cf4 i\cf6 ].\cf4 id \cf6 ==\cf4  _propertyID\cf6 )\cf4  \cf6 \{\cf4 \cb1 \
\cb3                 \cf2 // validate caller\cf4 \cb1 \
\cb3                 \cf10 require\cf6 (\cf10 msg\cf6 .\cf4 sender \cf6 ==\cf4  properties\cf6 [\cf4 i\cf6 ].\cf4 inspector\cf6 ,\cf4  \cf11 "Only inspector approve the deal"\cf6 );\cf4 \cb1 \
\cb3                 \cf2 // update status\cf4 \cb1 \
\cb3                 properties\cf6 [\cf4 i\cf6 ].\cf4 isInspected \cf6 =\cf4  _passed\cf6 ;\cf4  \cb1 \
\cb3             \cf6 \}\cf4 \cb1 \
\cb3         \cf6 \}\cf4 \cb1 \
\cb3     \cf6 \}\cf4 \cb1 \
\
\cb3     \cf2 // Approve bid by banker from buyer\cf4 \cb1 \
\cb3     \cf5 function\cf4  bankApprovalFor\cf6 (\cf5 address\cf4  _buyerID\cf6 )\cf4  \cf8 public\cf4  \cf6 \{\cf4 \cb1 \
\cb3         \cf2 // filter buyer\cf4 \cb1 \
\cb3         \cf13 for\cf6 (\cf5 uint\cf4  i \cf6 =\cf4  \cf7 0\cf6 ;\cf4  i\cf6 <\cf4 buyers\cf6 .\cf4 length\cf6 ;\cf4  i\cf6 ++)\cf4  \cf6 \{\cf4 \cb1 \
\
\cb3             \cf14 \cb3 if\cf6 \cb3 (\cf4 buyers\cf6 [\cf4 i\cf6 ].\cf4 id \cf6 ==\cf4  _buyerID\cf6 )\cf4  \cf6 \{\cf4 \cb1 \
\cb3                 \cf2 // validate bank\cf4 \cb1 \
\cb3                 \cf10 require\cf6 (\cf4 buyers\cf6 [\cf4 i\cf6 ].\cf4 bank \cf6 ==\cf4  \cf10 msg\cf6 .\cf4 sender\cf6 ,\cf4  \cf11 "This bank is not assigned for approval"\cf6 );\cf4 \cb1 \
\
\cb3                 \cf2 // filter bid\cf4 \cb1 \
\cb3                 \cf13 for\cf6 (\cf5 uint\cf4  y \cf6 =\cf4  \cf7 0\cf6 ;\cf4  y\cf6 <\cf4 bids\cf6 .\cf4 length\cf6 ;\cf4  y\cf6 ++)\cf4  \cf6 \{\cf4 \cb1 \
\
\cb3                     \cf14 \cb3 if\cf6 \cb3 (\cf4 bids\cf6 [\cf4 y\cf6 ].\cf4 buyerID \cf6 ==\cf4  _buyerID\cf6 )\cf4  \cf6 \{\cf4 \cb1 \
\cb3                         \cb1 \
\cb3                         \cf2 // update status\cf4 \cb1 \
\cb3                         bids\cf6 [\cf4 y\cf6 ].\cf4 isBankApproved \cf6 =\cf4  \cf5 true\cf6 ;\cf4  \cb1 \
\cb3                     \cf6 \}\cf4 \cb1 \
\cb3                 \cf6 \}\cf4 \cb1 \
\cb3             \cf6 \}\cf4 \cb1 \
\cb3         \cf6 \}\cf4 \cb1 \
\cb3     \cf6 \}\cf4 \cb1 \
\
\cb3     \cf5 function\cf4  endAuction\cf6 ()\cf4  \cf8 public\cf4  \cf6 \{\cf4 \cb1 \
\cb3         \cf10 require\cf6 (\cf10 msg\cf6 .\cf4 sender \cf6 ==\cf4  seller\cf6 ,\cf4  \cf11 "Only seller end the auction"\cf6 );\cf4 \cb1 \
\
\cb3         highestBid \cf6 =\cf4  getHighestBid\cf6 ();\cf4 \cb1 \
\cb3     \cf6 \}\cf4 \cb1 \
\
\cb3     \cf2 // Close Sale and tranfer \cf4 \cb1 \
\cb3     \cf5 function\cf4  closeSale\cf6 (\cf5 uint256\cf4  _propertyID\cf6 )\cf4  \cf8 public\cf4  \cf6 \{\cf4 \cb1 \
\cb3         \cf10 require\cf6 (\cf10 msg\cf6 .\cf4 sender \cf6 ==\cf4  seller\cf6 ,\cf4  \cf11 "Only seller can close the deal"\cf6 );\cf4 \cb1 \
\cb3         \cf10 require\cf6 (\cf4 highestBid\cf6 .\cf4 propertyID \cf6 ==\cf4  _propertyID\cf6 ,\cf4  \cf11 "Auction needs to be end first"\cf6 );\cf4 \cb1 \
\
\cb3         \cf13 for\cf6 (\cf5 uint\cf4  i \cf6 =\cf4  \cf7 0\cf6 ;\cf4  i\cf6 <\cf4 properties\cf6 .\cf4 length\cf6 ;\cf4  i\cf6 ++)\cf4  \cf6 \{\cf4 \cb1 \
\cb3             Property \cf15 memory\cf4  property \cf6 =\cf4  properties\cf6 [\cf4 i\cf6 ];\cf4 \cb1 \
\
\cb3             \cf14 \cb3 if\cf6 \cb3 (\cf4 property\cf6 .\cf4 id \cf6 ==\cf4  _propertyID\cf6 )\cf4  \cf6 \{\cf4 \cb1 \
\cb3                 \cf10 require\cf6 (\cf4 property\cf6 .\cf4 isInspected\cf6 ,\cf4  \cf11 "Inspection is pending"\cf6 );\cf4 \cb1 \
\cb3                 \cf10 require\cf6 (\cf4 property\cf6 .\cf4 isOnSale\cf6 ,\cf4  \cf11 "Property is not on sale"\cf6 );\cf4 \cb1 \
\cb3                 \cb1 \
\cb3                 \cf2 // remove property from sale\cf4 \cb1 \
\cb3                 property\cf6 .\cf4 isOnSale \cf6 =\cf4  \cf5 false\cf6 ;\cf4 \cb1 \
\
\cb3                 \cf2 // transfer amount to seller\cf4 \cb1 \
\cb3                 \cf6 (\cf5 bool\cf4  success\cf6 ,\cf4  \cf6 )\cf4  \cf6 =\cf4  \cf8 payable\cf6 (\cf4 seller\cf6 ).\cf4 call\cf6 \{\cf4 value\cf6 :\cf4  highestBid\cf6 .\cf4 amount\cf6 \}(\cf4 \cb1 \
\cb3                 \cf11 ""\cf4 \cb1 \
\cb3                 \cf6 );\cf4 \cb1 \
\cb3                 \cf10 require\cf6 (\cf4 success\cf6 );\cf4 \cb1 \
\cb3                 \cb1 \
\cb3                 \cf2 // transfer nft/property to buyer\cf4 \cb1 \
\cb3                 IERC721\cf6 (\cf4 nftAddress\cf6 ).\cf4 transferPropertyFrom\cf6 (\cf5 address\cf6 (\cf12 \cb3 this\cf6 \cb3 ),\cf4  highestBid\cf6 .\cf4 buyerID\cf6 ,\cf4  _propertyID\cf6 );\cf4 \cb1 \
\cb3             \cf6 \}\cf4 \cb1 \
\cb3         \cf6 \}\cf4 \cb1 \
\cb3     \cf6 \}\cf4 \cb1 \
\
\cb3     \cf9 receive\cf6 ()\cf4  \cf8 external\cf4  \cf8 payable\cf4  \cf6 \{\}\cf4 \cb1 \
\
\cb3     \cf2 // Return true if buyer exists in the list\cf4 \cb1 \
\cb3     \cf5 function\cf4  isContainsBuyer\cf6 (\cf5 address\cf4  _buyerId\cf6 )\cf4  \cf8 private\cf4  \cf8 view\cf4  \cf16 returns\cf4  \cf6 (\cf5 bool\cf6 )\cf4  \cf6 \{\cf4 \cb1 \
\cb3         \cf13 for\cf6 (\cf5 uint\cf4  i \cf6 =\cf4  \cf7 0\cf6 ;\cf4  i\cf6 <\cf4 buyers\cf6 .\cf4 length\cf6 ;\cf4  i\cf6 ++)\cf4  \cf6 \{\cf4 \cb1 \
\cb3             \cf14 \cb3 if\cf6 \cb3 (\cf4 buyers\cf6 [\cf4 i\cf6 ].\cf4 id \cf6 ==\cf4  _buyerId\cf6 )\cf4  \cf6 \{\cf4 \cb1 \
\cb3                 \cf16 return\cf4  \cf5 true\cf6 ;\cf4 \cb1 \
\cb3             \cf6 \}\cf4 \cb1 \
\cb3         \cf6 \}\cf4 \cb1 \
\
\cb3         \cf16 return\cf4  \cf5 false\cf6 ;\cf4 \cb1 \
\cb3     \cf6 \}\cf4 \cb1 \
\
\cb3     \cf2 // Return true if property exists in the list\cf4 \cb1 \
\cb3     \cf5 function\cf4  isContainsProperty\cf6 (\cf5 uint256\cf4  _propertyID\cf6 )\cf4  \cf8 private\cf4  \cf8 view\cf4  \cf16 returns\cf4  \cf6 (\cf5 bool\cf6 )\cf4  \cf6 \{\cf4 \cb1 \
\cb3         \cf13 for\cf6 (\cf5 uint\cf4  i \cf6 =\cf4  \cf7 0\cf6 ;\cf4  i\cf6 <\cf4 properties\cf6 .\cf4 length\cf6 ;\cf4  i\cf6 ++)\cf4  \cf6 \{\cf4 \cb1 \
\cb3             \cf14 \cb3 if\cf6 \cb3 (\cf4 properties\cf6 [\cf4 i\cf6 ].\cf4 id \cf6 ==\cf4  _propertyID\cf6 )\cf4  \cf6 \{\cf4 \cb1 \
\cb3                 \cf16 return\cf4  \cf5 true\cf6 ;\cf4 \cb1 \
\cb3             \cf6 \}\cf4 \cb1 \
\cb3         \cf6 \}\cf4 \cb1 \
\
\cb3         \cf16 return\cf4  \cf5 false\cf6 ;\cf4 \cb1 \
\cb3     \cf6 \}\cf4 \cb1 \
\
\cb3      \cf2 /**\cf4 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3      * Return sorted array of bids\cf4 \cb1 \
\cf2 \cb3      */\cf4 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf5 function\cf4  getHighestBid\cf6 ()\cf4  \cf8 public\cf4  \cf8 view\cf4  \cf16 returns\cf6 (\cf4 Bid \cf15 memory\cf6 )\cf4  \cf6 \{\cf4 \cb1 \
\cb3         Bid\cf6 []\cf4  \cf15 memory\cf4  items \cf6 =\cf4  bids\cf6 ;\cf4 \cb1 \
\
\cb3         \cf13 for\cf4  \cf6 (\cf5 uint\cf4  i \cf6 =\cf4  \cf7 1\cf6 ;\cf4  i \cf6 <\cf4  items\cf6 .\cf4 length\cf6 ;\cf4  i\cf6 ++)\cf4 \cb1 \
\cb3             \cf13 for\cf4  \cf6 (\cf5 uint\cf4  j \cf6 =\cf4  \cf7 0\cf6 ;\cf4  j \cf6 <\cf4  i\cf6 ;\cf4  j\cf6 ++)\cf4 \cb1 \
\cb3                 \cf14 \cb3 if\cf4 \cb3  \cf6 (\cf4 items\cf6 [\cf4 i\cf6 ].\cf4 amount \cf6 <\cf4  items\cf6 [\cf4 j\cf6 ].\cf4 amount\cf6 )\cf4  \cf6 \{\cf4 \cb1 \
\cb3                     Bid \cf15 memory\cf4  res \cf6 =\cf4  items\cf6 [\cf4 i\cf6 ];\cf4 \cb1 \
\cb3                     items\cf6 [\cf4 i\cf6 ]\cf4  \cf6 =\cf4  items\cf6 [\cf4 j\cf6 ];\cf4 \cb1 \
\cb3                     items\cf6 [\cf4 j\cf6 ]\cf4  \cf6 =\cf4  res\cf6 ;\cf4 \cb1 \
\cb3                 \cf6 \}\cf4 \cb1 \
\cb3         \cf16 return\cf4  items\cf6 [\cf7 0\cf6 ];\cf4 \cb1 \
\cb3     \cf6 \}\cf4 \cb1 \
\cf6 \cb3 \}}